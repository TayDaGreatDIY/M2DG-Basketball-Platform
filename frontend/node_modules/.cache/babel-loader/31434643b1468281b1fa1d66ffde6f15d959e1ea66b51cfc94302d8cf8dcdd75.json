{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_BACKEND_URL + '/api';\n\n// Set up axios defaults\naxios.defaults.baseURL = API_BASE;\n\n// Add token to requests if available\nconst token = localStorage.getItem('token');\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\n// API endpoints\nexport const api = {\n  // Auth\n  login: data => axios.post('/auth/login', data),\n  register: data => axios.post('/auth/register', data),\n  // User\n  getCurrentUser: () => axios.get('/users/me'),\n  updateProfile: data => axios.put('/users/me', data),\n  // Courts\n  getCourts: () => axios.get('/courts'),\n  getCourt: id => axios.get(`/courts/${id}`),\n  createCourt: data => axios.post('/courts', data),\n  // Bookings\n  createBooking: data => axios.post('/bookings', data),\n  getMyBookings: () => axios.get('/bookings/me'),\n  // Tournaments\n  getTournaments: () => axios.get('/tournaments'),\n  createTournament: data => axios.post('/tournaments', data),\n  registerForTournament: id => axios.post(`/tournaments/${id}/register`),\n  // Challenges\n  getChallenges: () => axios.get('/challenges'),\n  createChallenge: data => axios.post('/challenges', data),\n  acceptChallenge: id => axios.post(`/challenges/${id}/accept`),\n  // Teams\n  getTeams: () => axios.get('/teams'),\n  createTeam: data => axios.post('/teams', data),\n  joinTeam: id => axios.post(`/teams/${id}/join`),\n  joinTeamByCode: code => axios.post('/teams/join-by-code', null, {\n    params: {\n      referral_code: code\n    }\n  }),\n  // Coaches\n  getCoaches: () => axios.get('/coaches'),\n  createCoachProfile: data => axios.post('/coaches', data),\n  // Games\n  createGame: data => axios.post('/games', data),\n  updateGameScore: (id, data) => axios.put(`/games/${id}/score`, data),\n  getMyGames: () => axios.get('/games/me'),\n  // Stats\n  getLeaderboard: () => axios.get('/stats/leaderboard')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_BACKEND_URL","defaults","baseURL","token","localStorage","getItem","headers","common","api","login","data","post","register","getCurrentUser","get","updateProfile","put","getCourts","getCourt","id","createCourt","createBooking","getMyBookings","getTournaments","createTournament","registerForTournament","getChallenges","createChallenge","acceptChallenge","getTeams","createTeam","joinTeam","joinTeamByCode","code","params","referral_code","getCoaches","createCoachProfile","createGame","updateGameScore","getMyGames","getLeaderboard"],"sources":["/app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = process.env.REACT_APP_BACKEND_URL + '/api';\n\n// Set up axios defaults\naxios.defaults.baseURL = API_BASE;\n\n// Add token to requests if available\nconst token = localStorage.getItem('token');\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\n// API endpoints\nexport const api = {\n  // Auth\n  login: (data) => axios.post('/auth/login', data),\n  register: (data) => axios.post('/auth/register', data),\n  \n  // User\n  getCurrentUser: () => axios.get('/users/me'),\n  updateProfile: (data) => axios.put('/users/me', data),\n  \n  // Courts\n  getCourts: () => axios.get('/courts'),\n  getCourt: (id) => axios.get(`/courts/${id}`),\n  createCourt: (data) => axios.post('/courts', data),\n  \n  // Bookings\n  createBooking: (data) => axios.post('/bookings', data),\n  getMyBookings: () => axios.get('/bookings/me'),\n  \n  // Tournaments\n  getTournaments: () => axios.get('/tournaments'),\n  createTournament: (data) => axios.post('/tournaments', data),\n  registerForTournament: (id) => axios.post(`/tournaments/${id}/register`),\n  \n  // Challenges\n  getChallenges: () => axios.get('/challenges'),\n  createChallenge: (data) => axios.post('/challenges', data),\n  acceptChallenge: (id) => axios.post(`/challenges/${id}/accept`),\n  \n  // Teams\n  getTeams: () => axios.get('/teams'),\n  createTeam: (data) => axios.post('/teams', data),\n  joinTeam: (id) => axios.post(`/teams/${id}/join`),\n  joinTeamByCode: (code) => axios.post('/teams/join-by-code', null, { params: { referral_code: code } }),\n  \n  // Coaches\n  getCoaches: () => axios.get('/coaches'),\n  createCoachProfile: (data) => axios.post('/coaches', data),\n  \n  // Games\n  createGame: (data) => axios.post('/games', data),\n  updateGameScore: (id, data) => axios.put(`/games/${id}/score`, data),\n  getMyGames: () => axios.get('/games/me'),\n  \n  // Stats\n  getLeaderboard: () => axios.get('/stats/leaderboard')\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}